# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.

analyzer:
  errors:
    invalid_assignment: error
    prefer_single_quotes: error
    slash_for_doc_comments: error
    unnecessary_string_escapes: error
    close_sinks: error
    cancel_subscriptions: error
    prefer_contains: error
    prefer_is_empty: error
    prefer_is_not_empty: error
    file_names: error

# A list of all available lints and their documentation is published at
# https://dart-lang.github.io/linter/lints/index.html.
linter:
  rules:
    - avoid_annotating_with_dynamic
    - avoid_empty_else
    - avoid_relative_lib_imports
    - avoid_returning_null_for_future
    - avoid_type_to_string
    - avoid_types_as_parameter_names
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_new
    - unnecessary_null_in_if_null_operators
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - unnecessary_this
    - prefer_single_quotes
    - prefer_generic_function_type_aliases
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_adjacent_string_concatenation
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_for_elements_to_map_fromIterable
    - prefer_function_declarations_over_variables
    - prefer_if_null_operators
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_is_not_operator
    - prefer_null_aware_operators
    - prefer_spread_collections
    - prefer_void_to_null
    - always_require_non_null_named_parameters
    - cancel_subscriptions
    - close_sinks
    - empty_statements
    - library_names
    - recursive_getters
    - slash_for_doc_comments
    - type_init_formals
    - valid_regexps
    - annotate_overrides
    - file_names
    - camel_case_extensions
    - camel_case_types
    - void_checks
    - no_duplicate_case_values
    - hash_and_equals
    - iterable_contains_unrelated_type
    - list_remove_unrelated_type
    - use_function_type_syntax_for_parameters
